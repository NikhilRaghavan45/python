html

<form [formGroup]="pform" (ngSubmit)="submitReg()" style="background-color: white; display: flex; justify-content: center; background-color: gray; height: 100vh;">
    <div>
        <h1 style="text-align: center;">PRODUCT FORM</h1>
        <div class="container col-sm-2" style="background-color: black; color: white; padding: 30px; border: 2px solid black; border-radius: 20px; width: 400px; height: 500px; margin-top: auto; margin-bottom: auto;">
            <div>
                <div class="form-group" style="padding: 10px 0px;">
                    <label for="pid">Product Id</label>
                    <input type="number" name="pid" id="pid" formControlName="pid">
                </div>
                <div *ngIf="pform.get('pid')?.hasError('productIdInvalid') && pform.get('pid')?.touched">
                    <div style="color: red;">Product Id should be a positive integer starting from 1 and incrementing.</div>
                </div>
            </div>
            <div class="form-group" style="padding: 10px 0px;">
                <label for="pname">Product Name</label>
                <input type="text" name="pname" id="pname" formControlName="pname">
            </div>
            <div class="form-group" style="padding: 10px 0px;">
                <label for="pdesc">Product Desc</label>
                <textarea rows="1" cols="22" name="pdesc" id="pdesc" formControlName="pdesc"></textarea>
            </div>
            <div class="form-group" style="padding: 10px 0px;">
                <label for="pprice">Price</label>
                <input type="number" name="price" id="price" formControlName="pprice">
            </div>
            <div class="form-group" style="padding: 10px 0px;">
                <label for="pqty">Quantity</label>
                <input type="number" name="pqty" id="pqty" formControlName="pqty">
            </div>
            <div class="form-group">
                <label for="pavail">Availability</label>
                <input type="checkbox" name="pavail" id="pavail" formControlName="pavail" value="Y">Y
                <span class="checkbox-space"></span>
                <input type="checkbox" name="pavail" id="pavail" formControlName="pavail" value="N">N
            </div>            
            <div class="form-group" style="padding: 10px 0px;display: inline-flex;">
                <label for="pimg">Product Image</label>
                <input type="file" name="pimg" id="pimg" formControlName="pimg">
            </div>
            <div style="display: flex; justify-content: center; align-items: center;margin-top: 10px;">
                <button type="submit" [disabled]="!pform.valid" class="btn btn-primary">Save Registration</button>
            </div>
        </div>
    </div>
</form>
css
 



*input, textarea {
    float: none;
    width: 100%;
}


label {
    font-size: medium;
    font-family: 'Times New Roman', Times, serif;
    text-transform: capitalize;
    font-weight: bold;
    float: left;
    width: 120px;
}

.form-group {
    display: flex;
    align-items: center;
}

div[class="container col-sm-2"] .img label {
    float: none;
}

div[class="container col-sm-2"] .img input[type="file"] {
    display: inline-block;
    width: auto;
}

div[class="container col-sm-2"] .img button {
    clear: both;
}

div[class="container col-sm-2"] label p {
    display: inline;
    margin-left: 5px;
}

.invalid-feedback {
    color: red;
    font-size: small;
}

.checkbox-space {
    margin-right: 10px;
}

input[type="file"] {
    margin-left: auto;
}

.ts
import { Component } from '@angular/core';
import { FormGroup,FormControl,Validators, AbstractControl} from '@angular/forms';



function productIdValidator(control: AbstractControl): { [key: string]: boolean } | null {
  const value = control.value;

  if (value !== null && value >= 1 && Math.floor(value) === value) {
    return null; // It's a valid product id
  } else {
    return { 'productIdInvalid': true }; // Invalid product id
  }
}



@Component({
  selector: 'app-project',
  templateUrl: './project.component.html',
  styleUrls: ['./project.component.css']
})
export class ProjectComponent {
  title="Product form"
  pform = new FormGroup({
  pid :new FormControl( [null, [Validators.required, productIdValidator]]),
  pname: new FormControl('',[Validators.required]),
  pdesc: new FormControl('',[Validators.required]),
  pprice : new FormControl('',[Validators.required]),
  pqty: new FormControl(),
  pavail:new FormControl(),
  pimage:new FormControl()
    
  })
  
  submitReg(){
    console.log(this.pform.value)
  }
 

}

app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { ProjectComponent } from './project/project.component';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';

@NgModule({
  declarations: [
    AppComponent,
    ProjectComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
